/* tslint:disable */
/* eslint-disable */
/**
 * Chabloom Accounts
 * Chabloom Accounts v1 API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    LoginViewModel,
    LoginViewModelFromJSON,
    LoginViewModelToJSON,
    ProblemDetails,
    ProblemDetailsFromJSON,
    ProblemDetailsToJSON,
    RegisterViewModel,
    RegisterViewModelFromJSON,
    RegisterViewModelToJSON,
} from '../models';

export interface ApiAuthenticationLoginPostRequest {
    loginViewModel?: LoginViewModel;
}

export interface ApiAuthenticationRegisterPostRequest {
    registerViewModel?: RegisterViewModel;
}

/**
 * AuthenticationApi - interface
 * 
 * @export
 * @interface AuthenticationApiInterface
 */
export interface AuthenticationApiInterface {
    /**
     * 
     * @param {LoginViewModel} [loginViewModel] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthenticationApiInterface
     */
    apiAuthenticationLoginPostRaw(requestParameters: ApiAuthenticationLoginPostRequest): Promise<runtime.ApiResponse<void>>;

    /**
     */
    apiAuthenticationLoginPost(requestParameters: ApiAuthenticationLoginPostRequest): Promise<void>;

    /**
     * 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthenticationApiInterface
     */
    apiAuthenticationLogoutPostRaw(): Promise<runtime.ApiResponse<void>>;

    /**
     */
    apiAuthenticationLogoutPost(): Promise<void>;

    /**
     * 
     * @param {RegisterViewModel} [registerViewModel] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthenticationApiInterface
     */
    apiAuthenticationRegisterPostRaw(requestParameters: ApiAuthenticationRegisterPostRequest): Promise<runtime.ApiResponse<void>>;

    /**
     */
    apiAuthenticationRegisterPost(requestParameters: ApiAuthenticationRegisterPostRequest): Promise<void>;

}

/**
 * 
 */
export class AuthenticationApi extends runtime.BaseAPI implements AuthenticationApiInterface {

    /**
     */
    async apiAuthenticationLoginPostRaw(requestParameters: ApiAuthenticationLoginPostRequest): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Authentication/Login`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: LoginViewModelToJSON(requestParameters.loginViewModel),
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiAuthenticationLoginPost(requestParameters: ApiAuthenticationLoginPostRequest): Promise<void> {
        await this.apiAuthenticationLoginPostRaw(requestParameters);
    }

    /**
     */
    async apiAuthenticationLogoutPostRaw(): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Authentication/Logout`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiAuthenticationLogoutPost(): Promise<void> {
        await this.apiAuthenticationLogoutPostRaw();
    }

    /**
     */
    async apiAuthenticationRegisterPostRaw(requestParameters: ApiAuthenticationRegisterPostRequest): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Authentication/Register`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: RegisterViewModelToJSON(requestParameters.registerViewModel),
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiAuthenticationRegisterPost(requestParameters: ApiAuthenticationRegisterPostRequest): Promise<void> {
        await this.apiAuthenticationRegisterPostRaw(requestParameters);
    }

}
